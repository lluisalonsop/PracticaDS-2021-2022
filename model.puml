@startuml

skinparam classAttributeIconSize 0

class Main {
    - createFromJson(JSONObject)
    - fromJson(String route)
    + main(args : String[])
}

Abstract Node{
    - Name : string
    + Node(name : String)
    + getTime()
    + addNode(name : Node)
    + print()
    + showTree(depth : int)
    + getName()
    + changeStatus()
    + calculateTime()
    + toJson()
}

class Project {
    - children : node[]
    + Project(name : String)
    + addNode(aux : Node)
    + showTree(depht : int)
    + getTime()
    + toJson()
}

class Task {
    - intervals : Interval[]
    + Task(name : String) 
    + Task(name : String, Intervals : Interval)
    + calculateTime()
    + changeStatus()
    + converseTimeandPrint(sumatory : long)
    + print()
    + showTree(depth : int)
    + getTime()
    + toJson()
}
class Interval{
    - Working : boolean
    - InitialDate : LocalDateTime
    - EndDate : LocalDateTime
    - IntervalTime : long
    + Interval()
    + Interval(Working : boolean, InitialDate String, EndDate : String)
    + update(obj : Observable, arg : Object)
    + end()
    + getStatus()
    + getIntervalTime()
    + getInitialDate()
    + getFinalDate()
    + calculateTime()
    + printInterval()
    + toJson()
}

Interface Observable{
    #notifyAll()
    +addObserver(IObserver)
    +removeObserver(IObserver)
}
class Timer{
    - instance : Timer
    - Timer()
    + run()
    + getInstance()
}
Interface (IObserver){
    +update()
}
Task *--> Interval
Project *-up-> "1..*" Node

Task -right-|> Node
Project -up-|> Node
Timer --|> Observable
Interval --|> IObserver
Observable *--> "1..*" IObserver
@enduml
